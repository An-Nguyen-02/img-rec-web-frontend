{"ast":null,"code":"var _jsxFileName = \"E:\\\\webdev\\\\project\\\\Image_rec_web\\\\react-app\\\\src\\\\components\\\\Image\\\\Image.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ClarifaiStub = require('clarifai-nodejs-grpc');\n\nconst stub = ClarifaiStub.grpc();\nconst metadata = new grpc.Metadata();\nmetadata.set(\"authorization\", \"Key 42368394caad4b1fbf5dd2272a261fb4\");\n\nconst handleApicall = (req, res) => {\n  stub.PostModelOutputs({\n    // This is the model ID of a publicly available Face-detect model. You may use any other public or custom model ID.\n    model_id: \"a403429f2ddf4b49b307e318f00e528b\",\n    inputs: [{\n      data: {\n        image: {\n          url: req.body.input\n        }\n      }\n    }]\n  }, metadata, (err, response) => {\n    if (err) {\n      console.log(\"Error: \" + err);\n      return;\n    }\n\n    if (response.status.code !== 10000) {\n      console.log(\"Received failed status: \" + response.status.description + \"\\n\" + response.status.details);\n      return;\n    }\n\n    console.log(\"Predicted concepts, with confidence values:\");\n\n    for (const c of response.outputs[0].data.concepts) {\n      console.log(c.name + \": \" + c.value);\n    }\n  });\n};\n\nconst Image = _ref => {\n  let {\n    imgURL\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgURL,\n      alt: \"Img from input\",\n      width: \"500px\",\n      height: \"auto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Image;\nexport default Image;\n\nvar _c;\n\n$RefreshReg$(_c, \"Image\");","map":{"version":3,"sources":["E:/webdev/project/Image_rec_web/react-app/src/components/Image/Image.js"],"names":["React","ClarifaiStub","require","stub","grpc","metadata","Metadata","set","handleApicall","req","res","PostModelOutputs","model_id","inputs","data","image","url","body","input","err","response","console","log","status","code","description","details","c","outputs","concepts","name","value","Image","imgURL"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,YAAY,GAAGC,OAAO,CAAC,sBAAD,CAA5B;;AACA,MAAMC,IAAI,GAAGF,YAAY,CAACG,IAAb,EAAb;AACA,MAAMC,QAAQ,GAAG,IAAID,IAAI,CAACE,QAAT,EAAjB;AACAD,QAAQ,CAACE,GAAT,CAAa,eAAb,EAA8B,sCAA9B;;AACA,MAAMC,aAAa,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AACnCP,EAAAA,IAAI,CAACQ,gBAAL,CACI;AACI;AACAC,IAAAA,QAAQ,EAAE,kCAFd;AAGIC,IAAAA,MAAM,EAAE,CAAC;AAACC,MAAAA,IAAI,EAAE;AAACC,QAAAA,KAAK,EAAE;AAACC,UAAAA,GAAG,EAAEP,GAAG,CAACQ,IAAJ,CAASC;AAAf;AAAR;AAAP,KAAD;AAHZ,GADJ,EAMIb,QANJ,EAOI,CAACc,GAAD,EAAMC,QAAN,KAAmB;AACf,QAAID,GAAJ,EAAS;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAYH,GAAxB;AACA;AACH;;AAED,QAAIC,QAAQ,CAACG,MAAT,CAAgBC,IAAhB,KAAyB,KAA7B,EAAoC;AAChCH,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAA6BF,QAAQ,CAACG,MAAT,CAAgBE,WAA7C,GAA2D,IAA3D,GAAkEL,QAAQ,CAACG,MAAT,CAAgBG,OAA9F;AACA;AACH;;AAEDL,IAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ;;AACA,SAAK,MAAMK,CAAX,IAAgBP,QAAQ,CAACQ,OAAT,CAAiB,CAAjB,EAAoBd,IAApB,CAAyBe,QAAzC,EAAmD;AAC/CR,MAAAA,OAAO,CAACC,GAAR,CAAYK,CAAC,CAACG,IAAF,GAAS,IAAT,GAAgBH,CAAC,CAACI,KAA9B;AACH;AACJ,GAtBL;AAwBA,CAzBD;;AA2BA,MAAMC,KAAK,GAAG,QAAc;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AAC3B,sBACC;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACC;AAAK,MAAA,GAAG,EAAEA,MAAV;AAAkB,MAAA,GAAG,EAAC,gBAAtB;AAAuC,MAAA,KAAK,EAAC,OAA7C;AAAqD,MAAA,MAAM,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAND;;KAAMD,K;AAQN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\nconst ClarifaiStub = require('clarifai-nodejs-grpc')\r\nconst stub = ClarifaiStub.grpc();\r\nconst metadata = new grpc.Metadata();\r\nmetadata.set(\"authorization\", \"Key 42368394caad4b1fbf5dd2272a261fb4\");\r\nconst handleApicall = (req, res) => {\r\n\tstub.PostModelOutputs(\r\n\t    {\r\n\t        // This is the model ID of a publicly available Face-detect model. You may use any other public or custom model ID.\r\n\t        model_id: \"a403429f2ddf4b49b307e318f00e528b\",\r\n\t        inputs: [{data: {image: {url: req.body.input}}}]\r\n\t    },\r\n\t    metadata,\r\n\t    (err, response) => {\r\n\t        if (err) {\r\n\t            console.log(\"Error: \" + err);\r\n\t            return;\r\n\t        }\r\n\r\n\t        if (response.status.code !== 10000) {\r\n\t            console.log(\"Received failed status: \" + response.status.description + \"\\n\" + response.status.details);\r\n\t            return;\r\n\t        }\r\n\r\n\t        console.log(\"Predicted concepts, with confidence values:\")\r\n\t        for (const c of response.outputs[0].data.concepts) {\r\n\t            console.log(c.name + \": \" + c.value);\r\n\t        }\r\n\t    }\r\n\t);\r\n}\r\n\r\nconst Image = ({imgURL}) => {\r\n\treturn(\r\n\t\t<div className='center'>\r\n\t\t\t<img src={imgURL} alt=\"Img from input\" width='500px' height='auto'/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Image;"]},"metadata":{},"sourceType":"module"}
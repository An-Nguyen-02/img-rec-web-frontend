{"ast":null,"code":"var _jsxFileName = \"E:\\\\webdev\\\\project\\\\Image_rec_web\\\\react-app\\\\src\\\\components\\\\Image\\\\Image.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  ClarifaiStub,\n  grpc\n} = require(\"clarifai-nodejs-grpc\"); // const stub = ClarifaiStub.grpc();\n// const metadata = new grpc.Metadata();\n// metadata.set(\"authorization\", \"Key 42368394caad4b1fbf5dd2272a261fb4\");\n// const handleApicall = (req, res) => {\n// \tstub.PostModelOutputs(\n// \t    {\n// \t        // This is the model ID of a publicly available Face-detect model. You may use any other public or custom model ID.\n// \t        model_id: \"a403429f2ddf4b49b307e318f00e528b\",\n// \t        inputs: [{data: {image: {url: req.body.input}}}]\n// \t    },\n// \t    metadata,\n// \t    (err, response) => {\n// \t        if (err) {\n// \t            console.log(\"Error: \" + err);\n// \t            return;\n// \t        }\n// \t        if (response.status.code !== 10000) {\n// \t            console.log(\"Received failed status: \" + response.status.description + \"\\n\" + response.status.details);\n// \t            return;\n// \t        }\n// \t        console.log(\"Predicted concepts, with confidence values:\")\n// \t        for (const c of response.outputs[0].data.concepts) {\n// \t            console.log(c.name + \": \" + c.value);\n// \t        }\n// \t    }\n// \t);\n// }\n\n\nconst Image = _ref => {\n  let {\n    imgURL\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgURL,\n      alt: \"Img from input\",\n      width: \"500px\",\n      height: \"auto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Image;\nexport default Image;\n\nvar _c;\n\n$RefreshReg$(_c, \"Image\");","map":{"version":3,"sources":["E:/webdev/project/Image_rec_web/react-app/src/components/Image/Image.js"],"names":["React","ClarifaiStub","grpc","require","Image","imgURL"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AACA,MAAM;AAACC,EAAAA,YAAD;AAAeC,EAAAA;AAAf,IAAuBC,OAAO,CAAC,sBAAD,CAApC,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,KAAK,GAAG,QAAc;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AAC3B,sBACC;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACC;AAAK,MAAA,GAAG,EAAEA,MAAV;AAAkB,MAAA,GAAG,EAAC,gBAAtB;AAAuC,MAAA,KAAK,EAAC,OAA7C;AAAqD,MAAA,MAAM,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAND;;KAAMD,K;AAQN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\nconst {ClarifaiStub, grpc} = require(\"clarifai-nodejs-grpc\");\r\n// const stub = ClarifaiStub.grpc();\r\n// const metadata = new grpc.Metadata();\r\n// metadata.set(\"authorization\", \"Key 42368394caad4b1fbf5dd2272a261fb4\");\r\n// const handleApicall = (req, res) => {\r\n// \tstub.PostModelOutputs(\r\n// \t    {\r\n// \t        // This is the model ID of a publicly available Face-detect model. You may use any other public or custom model ID.\r\n// \t        model_id: \"a403429f2ddf4b49b307e318f00e528b\",\r\n// \t        inputs: [{data: {image: {url: req.body.input}}}]\r\n// \t    },\r\n// \t    metadata,\r\n// \t    (err, response) => {\r\n// \t        if (err) {\r\n// \t            console.log(\"Error: \" + err);\r\n// \t            return;\r\n// \t        }\r\n\r\n// \t        if (response.status.code !== 10000) {\r\n// \t            console.log(\"Received failed status: \" + response.status.description + \"\\n\" + response.status.details);\r\n// \t            return;\r\n// \t        }\r\n\r\n// \t        console.log(\"Predicted concepts, with confidence values:\")\r\n// \t        for (const c of response.outputs[0].data.concepts) {\r\n// \t            console.log(c.name + \": \" + c.value);\r\n// \t        }\r\n// \t    }\r\n// \t);\r\n// }\r\n\r\nconst Image = ({imgURL}) => {\r\n\treturn(\r\n\t\t<div className='center'>\r\n\t\t\t<img src={imgURL} alt=\"Img from input\" width='500px' height='auto'/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Image;"]},"metadata":{},"sourceType":"module"}